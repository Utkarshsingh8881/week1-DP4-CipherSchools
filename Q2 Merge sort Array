class Solution {

public:
int search(vector<int>& nums , int l , int r, int target)
{
    int ans = -1;
    while(r >= l){
        int mid = (l+r)/2;
        if(nums[mid] == target)
        {
            return mid;
        }else{
            if(nums[mid] < target){
                l = mid+1;
            }else{
                r = mid-1;
            }
        }
    }
    return ans;
}
    vector<int> searchRange(vector<int>& nums, int target) {
        
        int n = nums.size();
        
        int index = search(nums , 0 , n-1 , target);
        int l =index , r = index;
        
        while(1){
            int left_part = search(nums,0,l-1,target);
            int right_part = search(nums,r+1,n-1,target);
            if(left_part == -1 && right_part == -1){
                break;
            }
            if(left_part != -1){
                l = left_part;
            }

            if(right_part  != -1){
                r = right_part;
            }
        }
        return {l , r};  
    }
};
